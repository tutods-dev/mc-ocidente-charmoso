import{H3Event as f,setResponseStatus as w,appendResponseHeader as A,setHeader as C,getRequestIP as T,getResponseStatus as q,getResponseStatusText as E,getCookie as $,setCookie as L,getRequestURL as k,getResponseHeaders as P,getResponseHeader as W,setResponseHeader as j,removeResponseHeader as I,getRequestWebStream as O}from"h3";import{AsyncLocalStorage as U}from"node:async_hooks";function N(t={}){let e,n=!1;const r=s=>{if(e&&e!==s)throw new Error("Context conflict")};let a;if(t.asyncContext){const s=t.AsyncLocalStorage||globalThis.AsyncLocalStorage;s?a=new s:console.warn("[unctx] `AsyncLocalStorage` is not provided.")}const d=()=>{if(a&&e===void 0){const s=a.getStore();if(s!==void 0)return s}return e};return{use:()=>{const s=d();if(s===void 0)throw new Error("Context is not available");return s},tryUse:()=>d(),set:(s,i)=>{i||r(s),e=s,n=!0},unset:()=>{e=void 0,n=!1},call:(s,i)=>{r(s),e=s;try{return a?a.run(s,i):i()}finally{n||(e=void 0)}},async callAsync(s,i){e=s;const x=()=>{e=s},p=()=>e===s?x:void 0;h.add(p);try{const _=a?a.run(s,i):i();return n||(e=void 0),await _}finally{h.delete(p)}}}}function F(t={}){const e={};return{get(n,r={}){return e[n]||(e[n]=N({...t,...r})),e[n],e[n]}}}const u=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof global<"u"?global:typeof window<"u"?window:{},g="__unctx__",K=u[g]||(u[g]=F()),B=(t,e={})=>K.get(t,e),y="__unctx_async_handlers__",h=u[y]||(u[y]=new Set);function M(t){let e;const n=H(t),r={duplex:"half",method:t.method,headers:t.headers};return t.node.req.body instanceof ArrayBuffer?new Request(n,{...r,body:t.node.req.body}):new Request(n,{...r,get body(){return e||(e=X(t),e)}})}function z(t){return t.web??={request:M(t),url:H(t)},t.web.request}function D(){return te()}const m=Symbol("$HTTPEvent");function G(t){return typeof t=="object"&&(t instanceof f||t?.[m]instanceof f||t?.__is_event__===!0)}function o(t){return function(...e){let n=e[0];if(G(n))e[0]=n instanceof f||n.__is_event__?n:n[m];else{if(!globalThis.app.config.server.experimental?.asyncContext)throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");if(n=D(),!n)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");e.unshift(n)}return t(...e)}}const H=o(k),J=o(T),R=o(w),b=o(q),Q=o(E),c=o(P),S=o(W),V=o(j),v=o(A),ie=o($),ce=o(L),ue=o(C),X=o(O),Y=o(I),Z=o(z);function ee(){return B("nitro-app",{asyncContext:!!globalThis.app.config.server.experimental?.asyncContext,AsyncLocalStorage:U})}function te(){return ee().use().event}const l=Symbol("fetchEvent");function ne(t){return{request:Z(t),response:oe(t),clientAddress:J(t),locals:{},nativeEvent:t}}function le(t){return{...t}}function fe(t){if(!t[l]){const e=ne(t);t[l]=e}return t[l]}function de(t,e){for(const[n,r]of e.entries())v(t,n,r)}class se{event;constructor(e){this.event=e}get(e){const n=S(this.event,e);return Array.isArray(n)?n.join(", "):n||null}has(e){return this.get(e)!==void 0}set(e,n){return V(this.event,e,n)}delete(e){return Y(this.event,e)}append(e,n){v(this.event,e,n)}getSetCookie(){const e=S(this.event,"Set-Cookie");return Array.isArray(e)?e:[e]}forEach(e){return Object.entries(c(this.event)).forEach(([n,r])=>e(Array.isArray(r)?r.join(", "):r,n,this))}entries(){return Object.entries(c(this.event)).map(([e,n])=>[e,Array.isArray(n)?n.join(", "):n])[Symbol.iterator]()}keys(){return Object.keys(c(this.event))[Symbol.iterator]()}values(){return Object.values(c(this.event)).map(e=>Array.isArray(e)?e.join(", "):e)[Symbol.iterator]()}[Symbol.iterator](){return this.entries()[Symbol.iterator]()}}function oe(t){return{get status(){return b(t)},set status(e){R(t,e)},get statusText(){return Q(t)},set statusText(e){R(t,b(t),e)},headers:new se(t)}}export{fe as a,R as b,ue as c,le as d,ie as g,de as m,ce as s};
